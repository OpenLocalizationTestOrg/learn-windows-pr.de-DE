### YamlMime:ModuleUnit
title: Summary and knowledge check
uid: learn-windows.writing-windows-10-apps.5-summary
metadata:
  title: Summary and knowledge check
  description: This knowledge check will test your knowledge of the platforms and features you've used in this module.
  ms.date: 12/10/18
  author: QuinnRadich
  ms.author: quradic
  ms.topic: interactive-tutorial
  ms.prod: learning-windows
  ROBOTS: NOINDEX
durationInMinutes: 5
content: |
    [!include[](includes/5-summary.md)]
quiz:
    title: Knowledge check
    questions:
    - content: What platform should you use to write Windows apps?
      choices:
      - content: UWP
        incorrectExplanation: UWP is best if you want to write apps using Windows 10 features.
        isCorrect: false
      - content: WPF
        incorrectExplanation: WPF is best if you're making a complex app that targets versions of Windows before Windows 10.
        isCorrect: false
      - content: Windows Forms
        incorrectExplanation: Windows Forms is best if you're writing a simple tool or utility that doesn't require anything fancy.
        isCorrect: false
      - content: Whichever one you want!
        correctExplanation: Each platform has their strengths and weaknesses. Choose the one that works best for you!
        isCorrect: true
    - content: What's the difference between writing a UWP and a WPF app?
      choices:
      - content: WPF apps don't use XAML.
        incorrectExplanation: False. Windows Forms apps don't use XAML, but both UWP and WPF do.
        isCorrect: false
      - content: Events are handled differently in the UWP and WPF app.
        incorrectExplanation: UWP and WPF don't necessarily have an impact on how you handle events. They're platforms, not programming languages.
        isCorrect: false
      - content: UWP apps have access to their own runtime APIs, and don't necessarily use .NET.
        correctExplanation: Correct! The sample apps here are very similar, as they both use C# and XAML. But you might notice that the XAML controls are just a little bit different.
        isCorrect: true
    - content: What is Windows Template Studio (WTS) useful for?
      choices:
      - content: WTS creates a new UWP app with with the basic features and structure that you want.
        correctExplanation: WTS handles all the generic work for implementing your app's structure, letting you focus on the functionality that makes it unique.
        isCorrect: true
      - content: WTS helps you set up the XAML for your UWP or WPF app.
        incorrectExplanation: WTS doesn't only provide XAML code, and only works for UWP apps.
        isCorrect: false
      - content: WTS makes it easy to add new features to your existing UWP app.
        incorrectExplanation: WTS only works on new UWP apps, or apps already created using WTS.
        isCorrect: false
